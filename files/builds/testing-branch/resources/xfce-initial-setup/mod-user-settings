#!/bin/bash

####################################################################################################
# Name:         openSUSE Baldur (MicroOS with XFCE) - User Configurator                            #
# Description:  This file will configure the user settings on openSUSE Baldur.                     #
# Author:       Steve Zabka                                                                        #
# Author URI:   https://cryinkfly.com                                                              #
# License:      MIT                                                                                #
# Copyright (c) 2023                                                                               #
# Time/Date:    xx:xx/xx.xx.xxxx                                                                   #
# Version:      1.0.x                                                                              #
####################################################################################################

##############################################################################################################################################################################
# GET THE BASH SCRIPT ARGUMENTS AND PARAMETERS:                                                                                                                              #
##############################################################################################################################################################################

arg_par="$1"

##############################################################################################################################################################################
# CONFIGURATION OF THE BASH SCRIPT ARGUMENTS AND PARAMETERS:                                                                                                                 #
##############################################################################################################################################################################

SCRIPT_SET_ARG_PAR() {
    if [[ -z $arg_par ]]; then 
        echo "No parameter passed."]
        #USER-SETTINGS   
    else
        echo "Parameter passed = $arg_par"
        case "$arg_par" in
            "-h"|"--help")
            # Help
            SHOW_HELP
            ;;
            "-a"|"--add-user")
            # Create a new user.
            ADD_NEW_USER
            ;;
            "-d"|"--del-user")
           # Delete an existing user.
            DEL_USER
            ;;
            "-p"|"--set-pass")
            # Set a new password for an existing user.
            SET_NEW_PASS
            ;;
            *)
            echo "Error: Invalid option!"
            SHOW_HELP
            exit;;
        esac
    fi
}

##############################################################################################################################################################################
# CONFIGURATION OF THE COLOR SCHEME:                                                                                                                                         #
##############################################################################################################################################################################

LOAD_COLOR_SHEME() {
    RED=$'\033[0;31m'
    YELLOW=$'\033[1;33m'
    GREEN=$'\033[0;32m'
    BROWN_ORANGE=$'\033[0;33m'
    NOCOLOR=$'\033[0m'
}

##############################################################################################################################################################################
# THIS IS WHERE THE HELP PAGE IS DEFINED:                                                                                                                                    #
##############################################################################################################################################################################

SHOW_HELP() {
    clear
    # Display Help
    echo -e "${BROWN_ORANGE}Help page - User Settings Center${NOCOLOR}"
    echo -e "${BROWN_ORANGE}--------------------------------${NOCOLOR}"
    echo
    echo -e "${NOCOLOR}These functions can be accessed directly via the terminal.${NOCOLOR}"
    echo
    echo -e "${NOCOLOR}Syntax: mod-user-settings [${BROWN_ORANGE}option${NOCOLOR}]${NOCOLOR}"
    echo
    echo -e "${NOCOLOR}Options:${NOCOLOR}"
    echo
    echo -e "${BROWN_ORANGE}    -a --add-user        Create a new user.${NOCOLOR}"
    echo -e "${BROWN_ORANGE}    -d --del-user        Delete an existing user.${NOCOLOR}"
    echo -e "${BROWN_ORANGE}    -h --help            Show help page.${NOCOLOR}"
    echo -e "${BROWN_ORANGE}    -p --set-pass        Set a new password for an existing user.${NOCOLOR}"
    echo
}

##############################################################################################################################################################################
# LIST OF ALL HUMAN USERS ON THIS SYSTEM:                                                                                                                                    #
##############################################################################################################################################################################

LIST_ALL_HUMAN_USERS() {
    tmpfile0=$(mktemp -t /tmp/_all_users_list_.XXXXXXX)
    list_users=$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd)
    echo "$list_users" | tr ' ' '\n' > /tmp/_all_users_list_.XXXXXXX
    cat /tmp/_all_users_list_.XXXXXXX | while read line; do echo "FALSE" >> /tmp/_all_users_list_new.XXXXXXX && echo ${line} >> /tmp/_all_users_list_new.XXXXXXX; done
    rm /tmp/_all_users_list_.XXXXXXX
    mv /tmp/_all_users_list_new.XXXXXXX /tmp/_all_users_list_.XXXXXXX
}

##############################################################################################################################################################################
# LIST OF ALL GROUPS OF A SPECIAL HUMAN USER ON THIS SYSTEM (/etc/group):                                                                                                    #
##############################################################################################################################################################################

LIST_ALL_GROUPS_OF_USER() {
    tmpfile1=$(mktemp -t /tmp/_all_groups_of_user_list_.XXXXXXX)
    list_user_groups=$(id -nG $username)
    echo "$list_user_groups" | tr ' ' '\n' > /tmp/_all_groups_of_user_list_.XXXXXXX
}

##############################################################################################################################################################################
# LIST OF ALL GROUPS ON THIS SYSTEM (/etc/group):                                                                                                                            #
##############################################################################################################################################################################

LIST_ALL_GROUPS() {
    tmpfile2=$(mktemp -t /tmp/_all_groups_list_.XXXXXXX)
    list_all_groups=$(cut -d: -f1 /etc/group | sort)
    echo "$list_all_groups" | tr ' ' '\n' > /tmp/_all_groups_list_.XXXXXXX
    cat /tmp/_all_users_list_.XXXXXXX | while read line; do echo "FALSE" >> /tmp/_all_groups_list_new.XXXXXXX && echo ${line} >> /tmp/_all_groups_list_new.XXXXXXX; done
    rm /tmp/_all_groups_list.XXXXXXX
    mv /tmp/_all_groups_list_new.XXXXXXX /tmp/_all_groups_list_.XXXXXXX
}

# Next, the data from "_all_groups_of_user_list_.XXXXXXX" and "_all_groups_list_.XXXXXXX" are evaluated and then the "FALSE" values are replaced by "TRUE" values if the selected user belongs to one of the groups.
# ...

##############################################################################################################################################################################
# DISPLAY INFORMATION ABOUT A USER (USERNAME, USER GROUPS, ...):                                                                                                             #
##############################################################################################################################################################################



##############################################################################################################################################################################
# CREATE A NEW USER PASSWORD:                                                                                                                                                #
##############################################################################################################################################################################

ADD_NEW_USER() {
    userdata=`zenity --forms \
        --title="Benutzerkonto anlegen" \
        --text="<span font='9'>Sie müssen einen <span color='#2C423F'>Benutzername</span> für die reguläre\n(nicht-administrative) Nutzung Ihres Systems anlegen.\nUm einen <span color='#2C423F'>System-Benutzernamen</span> anzulegen, geben\nSie unten die erforderlichen Informationen ein.</span>" \
        --add-entry="Vollständiger Name:" \
        --add-entry="Benutzername:" \
        --add-password="Passwort:" \
        --add-password="Passwort bestätigen:" \
        --separator="," \
        --ok-label="Benutzer hinzufügen" \
        --cancel-label="Überspringen"`

    accepted=$?
    if ((accepted != 0)); then
        zenity --info --title="Wichtige Information" --text="Die Einrichtung eines neuen Benutzerkontos wurde übersprungen! Sie können jederzeit über die XFCE-Settings einen neuen Benutzer anlegen."
        #USER-SETTINGS
        exit
    fi

    name=$(awk -F, '{print $1}' <<<$userdata)
    username=$(awk -F, '{print $2}' <<<$userdata)
    password0=$(awk -F, '{print $3}' <<<$userdata)
    password1=$(awk -F, '{print $4}' <<<$userdata)
    
    egrep "^$username" /etc/passwd >/dev/null
    if [ $? -eq 0 ]; then
		zenity --warning --title="Ein Fehler ist aufgetreten" --text="Der eingegebene Benutzername ist auf diesem System bereits vorhanden!\nBitte wähle einen anderen Benutzername."
		ADD_NEW_USER
	else
		if [ $password0 == $password1 ]; then
            pass=$(perl -e 'print crypt($ARGV[0], "password")' $password0)
            pkexec su -c "useradd -m -p '$pass' $username"
            zenity --info --title="Benutzerkonto anlegen" --text="Das Benutzerkonto wurde erfolgreich angelegt und Sie werden nun abgemeldet, um sich mit dem neuen Benutzerkonto anmelden zu können!"
        else
            zenity --warning --title="Ein Fehler ist aufgetreten" --text="Die eingegebenen Passwörter stimmen nicht überein!"
            ADD_NEW_USER
        fi
	fi
}

##############################################################################################################################################################################
# CONFIGURATION OF THE NEW USER PASSWORD:                                                                                                                                    #
##############################################################################################################################################################################

SET_NEW_PASS() {
    userdata=`zenity --forms \
        --title="Password ändern" \
        --text="Sie müssen ihren Benutzer auswählen" \
        --add-entry="Benutzername:" \
        --add-password="Altes Passwort:" \
        --add-password="Neues Passwort:" \
        --add-password="Neues Passwort bestätigen:" \
        --separator="," \
        --ok-label="Password ändern" \
        --cancel-label="Abbrechen"`

    accepted=$?
    if ((accepted != 0)); then
        zenity --info --title="Wichtige Information" --text="Das Passwort wurde nicht geändert!"
        #USER-SETTINGS
        exit
    fi

    username=$(awk -F, '{print $1}' <<<$userdata)
    password0=$(awk -F, '{print $2}' <<<$userdata)
    password1=$(awk -F, '{print $3}' <<<$userdata)
    password2=$(awk -F, '{print $4}' <<<$userdata)

    if [ $password1 == $password2 ]; then
        if [ $password0 == $password1 ]; then
            zenity --info --title="Wichtige Information" --text="Es sollte nicht das alte Passwort wieder verwendet werden! Bitte wähle ein neues Passwort."
             SET_NEW_USER_PASSWORD
        else
            pass=$(perl -e 'print crypt($ARGV[0], "password")' $password1)
            pkexec su -c "usermod -p '$pass' $username"
            zenity --info --title="Wichtige Information" --text="Das Passwort wurde erfolgreich geändert!"
        fi
    else
        zenity --warning --title="Ein Fehler ist aufgetreten" --text="Die eingegebenen neuen Passwörter stimmen nicht überein!"
        SET_NEW_USER_PASSWORD
    fi
}

##############################################################################################################################################################################
# Delete user (Not the currently logged in user!):                                                                                                                           #
##############################################################################################################################################################################

DEL_USER() {
    echo "..."
    # ...
}

# Check that the user you are deleting is not currently logged in!
CHECK_USER_SHELL() {
    current_user=$(whoami)
    if [ $current_user == $username ]; then
        zenity --warning --title="Der ausgewähle Benutzer ist aktuell angemeldet und kann nicht gelöscht werden!"
    else
        echo "..."
        # Continue ...
    fi
}

#####################################################################################################################################################################################################################
# THE PROGRAM IS STARTED HERE:                                                                                                                                                                                      #
#####################################################################################################################################################################################################################

LOAD_COLOR_SHEME
SCRIPT_SET_ARG_PAR
